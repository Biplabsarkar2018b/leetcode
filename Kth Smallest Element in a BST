/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,int& counter,int& value,int k){
        if(!root) return;

        helper(root->left,counter,value,k);
        // root->val;
        counter++;
        if(counter==k) value = root->val;
        helper(root->right,counter,value,k);
    }
    int kthSmallest(TreeNode* root, int k) {
        int counter = 0;
        int value = -1;
        if(!root) return value;
        helper(root,counter,value,k);
        return value;
    }
};
