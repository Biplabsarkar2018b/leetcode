/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
//     int height(TreeNode* root){
//         if(root==NULL)  return 0;
//         int lh = height(root->left);
//         int rh = height(root->right);
        
//         return 1+max(lh,rh);
//     }
    
    pair<bool,int> ho(TreeNode* root){
        if(root==NULL){
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        
        pair<bool,int> lh = ho(root->left);
        pair<bool,int> rh = ho(root->right);
        bool c = lh.first && rh.first && abs(lh.second-rh.second)<=1;
        pair<bool,int> p;
        p.first = c;
        p.second = 1+max(lh.second,rh.second);
        return p;
    }
    bool isBalanced(TreeNode* root) {
        return ho(root).first;
    }
};
