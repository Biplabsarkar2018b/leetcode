method 1--------------------------



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,vector<vector<int>>& answer,int total,vector<int> curr,int targetSum){
        if(root==NULL){
            if(total==targetSum)
            //adding curr to answer---------------
            answer.push_back(curr);
            //then return 
            return;
        }

        if(root->left){
            curr.push_back(root->val);
            helper(root->left,answer,total+root->val,curr,targetSum);
            curr.pop_back();
        }
        if(root->right){
            curr.push_back(root->val);
            helper(root->right,answer,total+root->val,curr,targetSum);
            curr.pop_back();
        }

        if(!root->left && !root->right){
            curr.push_back(root->val);
            helper(NULL,answer,total+root->val,curr,targetSum);
        }
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> answer;
        if(root==NULL) return answer;
        vector<int> curr;
        helper(root,answer,0,curr,targetSum);
        return answer;
    }
};














