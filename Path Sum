/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,vector<int>& sums,int total){
        if(root==NULL){
            sums.push_back(total);
            return;
        }
        if(root->left)
            helper(root->left,sums,total+root->val);
        if(root->right)
            helper(root->right,sums,total+root->val);
        if(!root->left && !root->right){
            helper(NULL,sums,total+root->val);
        }

    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==NULL) return false;
        vector<int> sums;
        helper(root,sums,0);
        
        for(auto it:sums){
            if(it==targetSum) return true;
        }
        return false;

    }
};
