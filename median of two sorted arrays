class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int> f;
        int t = nums1.size()+nums2.size();
        int a = 0;
        int b = 0;
        while(t--){
            if(a<nums1.size() && b<nums2.size() && nums1[a]<nums2[b]){
                f.push_back(nums1[a]);
                a++;
            }else if(a<nums1.size() && b<nums2.size() && nums1[a]>nums2[b]){
                f.push_back(nums2[b]);
                b++;  
            }else if(a<nums1.size() && b<nums2.size() && nums1[a]==nums2[b]){
                f.push_back(nums2[b]);
                b++; 
            }else if(a<nums1.size() && b>=nums2.size()){
                f.push_back(nums1[a]);
                a++;
            }else if(a>=nums1.size() && b<nums2.size()){
                f.push_back(nums2[b]);
                b++;
            }
        }

        if(f.size()%2==0){
            int fi = f.size()/2;
            int si = f.size()/2 + 1;
            double ans = f[fi-1]+f[si-1];
            ans = ans / 2;
            return ans ;
        }else {
            return double(f[f.size()/2]);
        }
    }
};
