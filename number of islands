class Solution {
public:
    void dfs(vector<vector<char>>& grid,int i,int j,vector<vector<bool>>& visited){
        if(i<0 || j<0 || i>=grid.size() || j>=grid[0].size() || grid[i][j]=='0' || visited[i][j]==true) return;

        visited[i][j]=true;

        dfs(grid,i,j-1,visited);
        dfs(grid,i,j+1,visited);
        dfs(grid,i-1,j,visited);
        dfs(grid,i+1,j,visited);

    }


    int numIslands(vector<vector<char>>& grid) {
        int ans = 0;
        
        vector<vector<bool>> visited(grid.size());

        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                visited[i].push_back(false);
            }
        }  

        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                if(visited[i][j]==false && grid[i][j]=='1'){
                    ans++;
                    dfs(grid,i,j,visited);
                }
            }
        }  
        return ans;
    }
};
