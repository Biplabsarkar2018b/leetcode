class Solution {
public:

    void helper(int index,int target,vector<int>& candidates,vector<int>& v,vector<vector<int>>& ans){
        if(index==candidates.size()){
            if(target==0){
                ans.push_back(v);
            }
            return;
        }

        if(target>=candidates[index]){
        v.push_back(candidates[index]);
        helper(index,target-candidates[index],candidates,v,ans);
        v.pop_back();

        }
        helper(index+1,target,candidates,v,ans);
    }

 vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
         vector < vector < int >> ans;
      vector < int > ds;
      helper(0, target, candidates, ds, ans);
      return ans;
    }
};
